<?xml version="1.0" encoding="UTF-8"?>
<project name="reports" default="default"
         xmlns:ivy="antlib:org.apache.ivy.ant">

    <import file="build.xml"/>

    <target name="init-jacoco" depends="resolve-dependencies">
        <property name="execution.file" location="${build.dir}/jacoco.exec"/>
        <property name="jacoco.version" value="0.6.3.201306030806"/>

        <ivy:cachepath pathid="jacoco.classpath"
                       inline="true"
                       organisation="org.jacoco"
                       module="org.jacoco.ant"
                       revision="${jacoco.version}"
                       conf="*->default"/>

        <taskdef uri="antlib:org.jacoco.ant"
                 resource="org/jacoco/ant/antlib.xml"
                 classpathref="jacoco.classpath"/>
    </target>

    <target name="prepare-tests" depends="init-jacoco" xmlns:jacoco="antlib:org.jacoco.ant">
        <jacoco:agent property="test.vmparam"
                      destfile="${execution.file}"/>
    </target>

    <target name="tests-coverage-report" depends="init-jacoco, run-tests" xmlns:jacoco="antlib:org.jacoco.ant">
        <property name="report.dir" location="${build.dir}/report"/>
        <mkdir dir="${report.dir}"/>

        <jacoco:report>
            <executiondata>
                <file file="${execution.file}"/>
            </executiondata>
            <structure name="TeamCity Resource Monitor plugin">
                <classfiles>
                    <fileset dir="${classes.dir}"/>
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="${java.src.dir}"/>
                </sourcefiles>
            </structure>
            <html destdir="${report.dir}"/>
            <xml destfile="${report.dir}/coverage.xml"/>
        </jacoco:report>
    </target>

    <target name="report-test-coverage" depends="tests-coverage-report"/>

    <target name="report-test-coverage-stats" depends="report-test-coverage">
        <property name="report.file" location="${report.dir}/coverage.xml"/>
        <property name="groovy.version" value="2.1.9"/>

        <ivy:cachepath pathid="groovy.classpath"
                       inline="true"
                       organisation="org.codehaus.groovy"
                       module="groovy-ant"
                       revision="${groovy.version}"
                       conf="default"/>

        <taskdef name="groovy"
                 classname="org.codehaus.groovy.ant.Groovy"
                 classpathref="groovy.classpath"/>

        <groovy>
            def reportFile = properties.'report.file' as File
            def report = new XmlSlurper().parse(reportFile)
            def counters = report.counter

            def lineNode = counters.find { it.@type == 'LINE' }
            def methodNode = counters.find { it.@type == 'METHOD' }
            def classNode = counters.find { it.@type == 'CLASS' }

            def buildStatistics = [:]
            buildStatistics.put("CodeCoverageAbsLCovered", lineNode.@covered)
            buildStatistics.put("CodeCoverageAbsLTotal", lineNode.@missed.toLong() + lineNode.@covered.toLong())
            buildStatistics.put("CodeCoverageAbsMCovered", methodNode.@covered)
            buildStatistics.put("CodeCoverageAbsMTotal", methodNode.@missed.toLong() + methodNode.@covered.toLong())
            buildStatistics.put("CodeCoverageAbsCCovered", classNode.@covered)
            buildStatistics.put("CodeCoverageAbsCTotal", classNode.@missed.toLong() + classNode.@covered.toLong())
            buildStatistics.each { ant.echo(message: "##teamcity[buildStatisticValue key='${it.key}' value='${it.value}']") }
        </groovy>
    </target>

    <target name="init-checkstyle" depends="resolve-dependencies">
        <property name="checkstyle.version" value="5.6"/>

        <ivy:cachepath pathid="checkstyle.classpath"
                       inline="true"
                       organisation="com.puppycrawl.tools"
                       module="checkstyle"
                       revision="${checkstyle.version}"
                       conf="*->default"/>

        <taskdef uri="antlib:com.puppycrawl.tools.checkstyle"
                 resource="checkstyletask.properties"
                 classpathref="checkstyle.classpath"/>
    </target>

    <target name="report-checkstyle" depends="init-checkstyle" xmlns:cs="antlib:com.puppycrawl.tools.checkstyle">
        <property name="report.dir" location="${build.dir}/report"/>
        <mkdir dir="${report.dir}"/>

        <cs:checkstyle config="${basedir}/sun_checks.xml"
                       failureProperty="checkstyle.failure"
                       failOnViolation="false">
            <formatter type="xml" tofile="${report.dir}/checkstyle.xml"/>
            <fileset dir="${java.src.dir}" includes="**/*.java"/>
        </cs:checkstyle>
    </target>

    <target name="init-pitest" depends="resolve-dependencies">
        <property name="pit.version" value="0.31"/>

        <ivy:cachepath pathid="pitest.classpath"
                       inline="true" organisation="org.pitest" module="pitest-ant" revision="${pit.version}"
                       conf="*->default"/>

        <taskdef name="pitest"
                 classname="org.pitest.ant.PitestTask"
                 classpathref="pitest.classpath"/>
    </target>

    <target name="report-mutation-tests" depends="init-pitest, run-tests">
        <path id="mutation.classpath">
            <path refid="compile.classpath"/>
            <path refid="test.classpath"/>
            <pathelement location="${classes.dir}"/>
            <pathelement location="${test.classes.dir}"/>
            <path refid="pitest.classpath"/>
        </path>

        <pitest sourceDir="${java.src.dir}"
                classPath="mutation.classpath"
                targetTests="teamcity.resource.*"
                targetClasses="teamcity.resource.*"
                timestampedReports="false"
                reportDir="${test.report.dir}"/>
    </target>

    <target name="init-findbugs" depends="compile">
        <fail unless="findbugs.home" message="findbugs.home property needs to be set"/>

        <path id="findbugs.classpath">
            <fileset dir="${findbugs.home}/lib" includes="*.jar"/>
        </path>

        <taskdef name="findbugs"
                 classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
                 classpathref="findbugs.classpath"/>

        <property name="findbugs.report.level" value="medium"/> <!-- report levels: low, medium and high -->
        <property name="findbugs.timeout" value="60000"/>
        <property name="findbugs.debug" value="false"/>
    </target>

    <target name="report-findbugs" depends="init-findbugs">
        <property name="report.dir" location="${build.dir}/report"/>
        <mkdir dir="${report.dir}"/>

        <path id="findbugs.aux.classpath">
            <path refid="compile.classpath"/>
        </path>

        <findbugs home="${findbugs.home}"
                  debug="${findbugs.debug}"
                  output="xml"
                  outputFile="${report.dir}/findbugs.xml"
                  reportLevel="${findbugs.report.level}"
                  timeout="${findbugs.timeout}"
                  errorProperty="findbugs.error">
            <auxClasspath refid="findbugs.aux.classpath"/>
            <sourcePath path="${java.src.dir}"/>
            <class location="${classes.dir}"/>
        </findbugs>
        <fail if="findbugs.error" message="findbugs task failed - possibly a timeout"/>
    </target>


    <target name="init-pmd" depends="resolve-dependencies">
        <property name="pmd.version" value="5.0.5"/>

        <ivy:cachepath pathid="pmd.classpath"
                       inline="true" organisation="net.sourceforge.pmd" module="pmd" revision="${pmd.version}"
                       conf="*->default"/>

        <taskdef name="pmd"
                 classname="net.sourceforge.pmd.ant.PMDTask"
                 classpathref="pmd.classpath"/>
    </target>

    <target name="report-pmd" depends="init-pmd">
        <property name="report.dir" location="${build.dir}/report"/>
        <mkdir dir="${report.dir}"/>

        <pmd>
            <sourceLanguage name="java" version="1.6"/>
            <ruleset>java-basic</ruleset>
            <ruleset>java-braces</ruleset>
            <ruleset>java-codesize</ruleset>
            <ruleset>java-controversial</ruleset>
            <ruleset>java-coupling</ruleset>
            <ruleset>java-design</ruleset>
            <ruleset>java-naming</ruleset>
            <ruleset>java-unnecessary</ruleset>
            <ruleset>java-unusedcode</ruleset>
            <formatter type="xml" toFile="${report.dir}/pmd.xml"/>
            <fileset dir="${java.src.dir}">
                <include name="**/*.java"/>
            </fileset>
        </pmd>
    </target>
</project>
